// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=DMux0, b=DMux1, c=DMux2, d=DMux3, e=DMux4, f=DMux5, g=DMux6, h=DMux7);
    Register(in=in, load=DMux0, out=Registerout0);
    Register(in=in, load=DMux1, out=Registerout1);
    Register(in=in, load=DMux2, out=Registerout2);
    Register(in=in, load=DMux3, out=Registerout3);
    Register(in=in, load=DMux4, out=Registerout4);
    Register(in=in, load=DMux5, out=Registerout5);
    Register(in=in, load=DMux6, out=Registerout6);
    Register(in=in, load=DMux7, out=Registerout7);
    Mux8Way16(
        a=Registerout0, 
        b=Registerout1, 
        c=Registerout2,
        d=Registerout3,
        e=Registerout4,
        f=Registerout5, 
        g=Registerout6, 
        h=Registerout7, 
    sel=address, out=out);

}
